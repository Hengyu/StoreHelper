{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/storehelper\/appstorehelper\/paymentqueue(_:updatedtransactions:)"]}],"hierarchy":{"paths":[["doc:\/\/StoreHelper\/documentation\/StoreHelper","doc:\/\/StoreHelper\/documentation\/StoreHelper\/AppStoreHelper"]]},"abstract":[{"text":"Delegate method for the StoreKit1 payment queue. This method handles subscription transactions (e.g. renewals)","type":"text"},{"type":"text","text":" "},{"type":"text","text":"that happen when the app’s not running. It also handles in-app purchases made directly from the App Store,"}],"metadata":{"platforms":[{"beta":false,"name":"iOS","introducedAt":"15.0","deprecated":false,"unavailable":false},{"introducedAt":"12.0","beta":false,"deprecated":false,"unavailable":false,"name":"macOS"}],"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"paymentQueue"},{"text":"(","kind":"text"},{"text":"SKPaymentQueue","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)SKPaymentQueue"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"updatedTransactions"},{"kind":"text","text":": ["},{"preciseIdentifier":"c:objc(cs)SKPaymentTransaction","text":"SKPaymentTransaction","kind":"typeIdentifier"},{"text":"])","kind":"text"}],"roleHeading":"Instance Method","role":"symbol","modules":[{"name":"StoreHelper"}],"externalID":"c:@M@StoreHelper@objc(cs)AppStoreHelper(im)paymentQueue:updatedTransactions:","title":"paymentQueue(_:updatedTransactions:)"},"identifier":{"url":"doc:\/\/StoreHelper\/documentation\/StoreHelper\/AppStoreHelper\/paymentQueue(_:updatedTransactions:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"paymentQueue"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"queue","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)SKPaymentQueue","text":"SKPaymentQueue"},{"kind":"text","text":", "},{"text":"updatedTransactions","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"transactions"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"SKPaymentTransaction","preciseIdentifier":"c:objc(cs)SKPaymentTransaction"},{"text":"])","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"StoreKit1 payment queue"}]}],"name":"queue"},{"name":"transactions","content":[{"type":"paragraph","inlineContent":[{"text":"Collection of updated transactions (e.g. ","type":"text"},{"type":"codeVoice","code":"purchased"},{"text":")","type":"text"}]}]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"inlineContent":[{"text":"Because our main StoreKit processing is done via StoreKit2 in StoreHelper, all we have to do here is signal to","type":"text"},{"type":"text","text":" "},{"text":"StoreKit1 to finish purchased, restored or failed transactions. StoreKit1 purchases are (in theory) immediately","type":"text"},{"type":"text","text":" "},{"type":"text","text":"available to StoreKit2 (and vice versa), so any purchase will be picked up by StoreHelper as required."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Note on subscription transactions: In Xcode StoreKit Testing and Sandbox Testing subscription renewal transactions","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"that happen when the app’s not running are NEVER picked up by StoreKit2. That is, the transactions don’t appear"},{"text":" ","type":"text"},{"type":"text","text":"in "},{"code":"StoreKit.Transaction.all","type":"codeVoice"},{"type":"text","text":" or "},{"type":"codeVoice","code":"Transaction.currentEntitlement(for:)"},{"type":"text","text":". This seems to have been a known issue"},{"text":" ","type":"text"},{"type":"text","text":"since the release of StoreKit2 and can lead to the situation where a user has paid to renew their subscription"},{"text":" ","type":"text"},{"text":"but StoreKit2 has no knowledge of it.","type":"text"}]},{"inlineContent":[{"inlineContent":[{"type":"text","text":"Note that production builds using the live App Store DO NOT appear to suffer from this issue"}],"type":"strong"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"As a workaround, "},{"code":"StoreHelper","type":"codeVoice"},{"type":"text","text":" maintains a "},{"type":"codeVoice","code":"transactionUpdateCache"},{"type":"text","text":" that keeps track of subscription renewals"},{"type":"text","text":" "},{"text":"that happen when the app’s not running.","type":"text"}],"type":"paragraph"}]}],"references":{"doc://StoreHelper/documentation/StoreHelper":{"images":[{"identifier":"storehelper-logo.png","type":"icon"}],"type":"topic","url":"\/documentation\/storehelper","abstract":[{"type":"text","text":"StoreHelper is a Swift Package Manager (SPM) package that enables developers using Xcode 13 - 15 to easily add in-app purchase support to iOS 15 - 17 and macOS 12 - 14 SwiftUI apps."}],"kind":"symbol","role":"collection","identifier":"doc:\/\/StoreHelper\/documentation\/StoreHelper","title":"StoreHelper"},"storehelper-logo.png":{"type":"image","variants":[{"url":"\/images\/storehelper-logo.png","traits":["1x","light"]}],"identifier":"storehelper-logo.png","alt":null},"doc://StoreHelper/documentation/StoreHelper/AppStoreHelper/paymentQueue(_:updatedTransactions:)":{"identifier":"doc:\/\/StoreHelper\/documentation\/StoreHelper\/AppStoreHelper\/paymentQueue(_:updatedTransactions:)","url":"\/documentation\/storehelper\/appstorehelper\/paymentqueue(_:updatedtransactions:)","abstract":[{"type":"text","text":"Delegate method for the StoreKit1 payment queue. This method handles subscription transactions (e.g. renewals)"},{"text":" ","type":"text"},{"type":"text","text":"that happen when the app’s not running. It also handles in-app purchases made directly from the App Store,"}],"role":"symbol","title":"paymentQueue(_:updatedTransactions:)","type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"paymentQueue"},{"text":"(","kind":"text"},{"text":"SKPaymentQueue","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)SKPaymentQueue"},{"text":", ","kind":"text"},{"text":"updatedTransactions","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"SKPaymentTransaction","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)SKPaymentTransaction"},{"kind":"text","text":"])"}]},"doc://StoreHelper/documentation/StoreHelper/AppStoreHelper":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AppStoreHelper"}],"identifier":"doc:\/\/StoreHelper\/documentation\/StoreHelper\/AppStoreHelper","title":"AppStoreHelper","abstract":[{"type":"text","text":"Support for StoreKit1. Tells the observer that a user initiated an in-app purchase direct from the App Store,"},{"type":"text","text":" "},{"text":"rather than via the app itself. StoreKit2 does not (yet) provide support for direct purchases, so we need to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"use StoreKit1. This is a requirement in order to promote in-app purchases on the App Store. If your app doesn’t"},{"type":"text","text":" "},{"type":"text","text":"have a class that implements "},{"type":"codeVoice","code":"SKPaymentTransactionObserver"},{"type":"text","text":" and the "},{"type":"codeVoice","code":"paymentQueue(_:updatedTransactions:)"},{"type":"text","text":" and"},{"text":" ","type":"text"},{"code":"paymentQueue(_:shouldAddStorePayment:for:)","type":"codeVoice"},{"text":" delegate methods then you’ll get an error when you submit the app","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to the App Store and you have IAP promotions."}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/storehelper\/appstorehelper","navigatorTitle":[{"kind":"identifier","text":"AppStoreHelper"}]}}}